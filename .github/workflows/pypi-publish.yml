# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow follow documentation from https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

# Example of cibuildwheel from https://github.com/pypa/cibuildwheel/blob/main/examples/github-deploy.yml

name: Publish

# TODO revert before merge
on:
  push

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }} for python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python: 39
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: windows-latest
            python: 39
            platform_id: win_amd64
          - os: macos-13
            python: 39
            platform_id: macosx_x86_64
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        env:
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
        run: |
          python -m pip install cibuildwheel pipenv
          python -m cibuildwheel --output-dir wheelhouse
      - name: Upload wheel for ${{ matrix.os }} ${{ strategy.job-index }}
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
  build_dist:
    name: Prepare distribution packages
    runs-on: ubuntu-latest
    environment:
      name: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
          cache: 'pipenv'
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - name: Install dependencies
        run: pipenv install
      - name: Build package
        run: pipenv run python ./setup.py build_ext -i -j2 bdist_wheel
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: cibw-dist
          path: dist/*.tar.gz
      # TODO add twine check dist/*.tar.gz
  publish-to-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - build_wheels
      - build_dist
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/labeledmatrix
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
  publish-to-testpypi:
    name: Publish to TestPyPI
    needs:
      - build_wheels
      - build_dist
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/labeledmatrix

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
